#!groovy
//Run NGINX docker build
properties([disableConcurrentBuilds()])

pipeline {
	agent {
		label 'docker-agent'
		}
	options {
		buildDiscarder (logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
		timestamps()
	}
	stages {
		stage("Stop_And_Build") {
			steps {
				echo "========= START =========="
				/*sh 'result = \'docker stop mynginx_first\''
				sh 'echo $result'
				sh 'if [ "$result" = "1" ]'
				sh 'then'
					sh 'echo \"Good\"'
				sh 'else'
					sh 'echo \"Not Good\"'
				sh 'fi'*/
				script {
            				try {
                				sh 'docker stop mynginx_first'
						sh 'docker rename mynginx_first mynginx_first_stable'
            				} catch (err) {
						echo err
					}        
				}
        			echo currentBuild.result
				sh 'docker build -t mynginx_first .'
				sh 'docker create --name mynginx_first mynginx_first' 
				sh 'docker run -v /var/www:/usr/local/nginx/html -p 80:80 -t mynginx_first'
			}
		}
	}
}
