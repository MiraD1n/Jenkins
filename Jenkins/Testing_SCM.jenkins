#!groovy
//Run NGINX docker build
properties([disableConcurrentBuilds()])

pipeline {
	agent {
		label 'docker-agent'
		}
	options {
		buildDiscarder (logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
		timestamps()
	}
	stages {
		stage("Build and Run new NGINX") {
			steps {
				echo "========= Start Build new NGINX =========="
				//Ignore ERROR with first build
				catchError {
					sh 'docker tag mynginx_first mynginx_first_stable_image'
					sh 'docker rmi mynginx_first'
					sh 'docker stop mynginx_first'
					sh 'docker rename mynginx_first mynginx_first_stable'
					}
        			echo currentBuild.result
					dir ('NGINX') {
					sh 'docker build -t mynginx_first .'
				        }
					sh 'docker run --name mynginx_first -d -v /var/www:/usr/local/nginx/html -p 80:80 -t mynginx_first'
					sh 'docker exec mynginx_first service nginx start'
			}
		}
        stage("Test if it OK"){
            steps {
            echo "========= Start Testing =========="
            //start check
              sh 'code=`curl -sL --connect-timeout 20 --max-time 30 -w "%{http_code}\\n" "http://192.168.0.106/" -o /dev/null`'
              sh 'echo \"Found code $code\"'
              sh 'if [ "$code" = "200" ]; then'
                sh 'echo "Website $url is online."'
                sh 'break'
              sh 'else'
                sh 'echo "Website $url seems to be offline."'
              sh 'fi'
            //end check
           }
         }
       }
}
